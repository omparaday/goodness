import 'dart:async';

import 'package:flutter/foundation.dart' show SynchronousFuture;
import 'package:flutter/material.dart';

class L10n {
  L10n(this.locale);

  final Locale locale;

  static L10n of(BuildContext context) {
    return Localizations.of<L10n>(context, L10n)!;
  }

  static const _localizedValues = <String, Map<String, String>>{
    'en': {
      'home': 'Home',
      'history': 'History',
      'profile': 'Profile',
      'happy': 'Happy',
      'excited': 'Excited',
      'peaceful': 'Peaceful',
      'fear': 'Fear',
      'sad': 'Sad',
      'weak': 'Weak',
      'angry': 'Angry',
      'strong': 'Strong',
      'week': 'Week',
      'month': 'Month',
      'year': 'Year',
      'all': 'All',
      'averageScore': 'Average Score: %s',
      'prev': 'Previous',
      'next': 'Next',
      'recentSubmissions': 'Recent Submissions',
      'scorePerfect100': 'Score: Perfect ЁЯТп',
      'scoreWithVal': 'Score: %d',
      'notOptedForDeed': 'Not opted for deed.',
      'wordWithDetails': 'Word: %s\n%s',
      'quoteWithContent': '%s',
      'deedForTheDay': 'Good Deed for the day\n%s',
      'weekWithStart': 'Week: %s',
      'lookAroundSmile': 'Look around with a good smile.',
      'deepBreath': 'Take a deep breath.',
      'yourMood': 'Your mood',
      'writeAboutFeel': 'Write a few words about why you feel so today.',
      'yourAnswer': 'Your answer',
      'clickForGoodDeed': 'Click here if you want to do a good deed.',
      'submit': 'Submit',
      'proceed': 'Proceed',
      'yourscorePerfect100': 'Your goodness score is Perfect ЁЯТп',
      'yourscoreWithVal': 'Your goodness score is %d',
      'disabled': 'Disabled',
      'noDisability': 'No Disability',
      'phyCondidtions': 'Physical Conditions',
      'unmarried': 'Unmarried',
      'married': 'Married',
      'maritalStatus': 'Marital Status',
      'preferNotToRespond': 'Prefer Not To Respond',
      'transgender': 'Transgender',
      'male': 'Male',
      'female': 'Female',
      'nonBinary': 'Non Binary',
      'gender': 'Gender',
      'notSet': 'Not Set',
      'dateOfBirth': 'Date of Birth',
      'yourCountry': 'Your Country',
      'yourName': 'Your Name',
      'yourProfile': 'Your Profile',
      'phyConditionsNotDisabled': 'Physical Conditions: No Disability',
      'phyConditionsDisabled': 'Physical Conditions: Disabled',
      'maritalStatusUnmarried': 'Marital Status: Unmarried',
      'maritalStatusMarried': 'Marital Status: Married',
      'dateOfBirthDisplay': 'Date of Birth: %s',
      'genderDisplay': 'Gender: %s',
      'didNotWrite': 'Did not write.',
      'close': 'Close',
      'getStarted': 'Your privacy is assured. Your data or anything you write in this app is not transferred outside your phone or used by anyone else.\n\nGet started.\nWishing you a good time ahead!',
      'profileWelcome': 'Update your profile to get a personalized experience everyday that is specially prepared for you.',
      'historyWelcome': 'Check your past mood state and see your happiness progress everyday. Keep yourself motivated.',
      'homeWelcome': 'Select your mood every day on the home page and go through the flow which motivates you for the day.',
      'welcome': 'Welcome to Goodness!\nHelp yourself to improve your mood by reducing negative thoughts and encouraging positive thoughts.',
      'highMood': 'Highly %s',
      'moderateMood': 'Moderately %s',
      'slightMood': 'Slightly %s',
      'privacyAssurance': 'Your privacy is assured. Your data or anything you write in this app is not transferred outside your phone or used by anyone else.',
      'quote': 'Quote',
      'share': 'Share',
      'tryApp': 'Try our app for iOS and Android for full history retention and more enhanced features. Click on the links below to download.',
      'appDownloadProfileInfo': 'You can download this later in profile page.',
      'dailyReminderNotificationTitle': 'Time to record your day!',
      'dailyReminderNotificationBody': 'Record your mood today for a better tomorrow.',
      'dailyReminderNotificationPayload': 'Way to go for better tomorrow!'
    },
    'ta': {
      'home': 'роорпБроХрокрпНрокрпБ',
      'history': 'роХроЯроирпНродро╡рпИ',
      'profile': 'роЪрпБропро╡ро┐ро╡ро░роорпН',
      'happy': 'роороХро┐ро┤рпНроЪрпНроЪро┐',
      'excited': 'роЙро▒рпНроЪро╛роХроорпН',
      'peaceful': 'роЕроорпИродро┐',
      'fear': 'рокропроорпН',
      'sad': 'ро╡ро░рпБродрпНродроорпН',
      'weak': 'рокро▓ро╡рпАройроорпН',
      'angry': 'роХрпЛрокроорпН',
      'strong': 'роОро┤рпБроЪрпНроЪро┐',
      'week': 'ро╡ро╛ро░роорпН',
      'month': 'рооро╛родроорпН',
      'year': 'ро╡ро░рпБроЯроорпН',
      'all': 'роЕройрпИродрпНродрпБроорпН',
      'averageScore': 'роЪро░ро╛роЪро░ро┐ роородро┐рокрпНрокрпБ: %s',
      'prev': 'роорпБройрпН',
      'next': 'рокро┐ройрпН',
      'recentSubmissions': 'роЪроорпАрокродрпНродро┐роп роЪрооро░рпНрокрпНрокро┐рокрпНрокрпБроХро│рпН',
      'scorePerfect100': 'роородро┐рокрпНрокрпБ: роХроЪрпНроЪро┐родрооро╛рой ЁЯТп',
      'scoreWithVal': 'роородро┐рокрпНрокрпБ: %d',
      'notOptedForDeed': 'роиро▒рпНроЪрпЖропро▓ро┐ро▓рпН роИроЯрпБрокроЯ ро╡ро┐ро┤рпИропро╡ро┐ро▓рпНро▓рпИ.',
      'wordWithDetails': 'ро╡ро╛ро░рпНродрпНродрпИ: %s\n%s',
      'quoteWithContent': '%s',
      'deedForTheDay': 'роиро╛ро│рпНродрпЛро▒рпБроорпН роиро▒рпНроЪрпЖропро▓рпН\n%s',
      'weekWithStart': 'ро╡ро╛ро░роорпН: %s',
      'lookAroundSmile': 'рокрпБройрпНройроХрпИропрпБроЯройрпН роЪрпБро▒рпНро▒ро┐рокрпН рокро╛ро░рпБроЩрпНроХро│рпН',
      'deepBreath': 'роЖро┤рпНроирпНрод роорпВроЪрпНроЪрпБ роОроЯрпБродрпНродрпБроХрпН роХрпКро│рпНро│рпБроЩрпНроХро│рпН',
      'yourMood': 'родроЩрпНроХро│рпН рооройроиро┐ро▓рпИ',
      'writeAboutFeel': 'роПройрпН роЕрокрпНрокроЯро┐ роЙрогро░рпНроХро┐ро▒рпАро░рпНроХро│рпН роОройрпНрокродрпИрокрпН рокро▒рпНро▒ро┐ роЪро┐ро▓ ро╡ро╛ро░рпНродрпНродрпИроХро│рпИ роОро┤рпБродрпБроЩрпНроХро│рпН.',
      'yourAnswer': 'роЙроЩрпНроХро│рпН ро╡ро┐роЯрпИ',
      'clickForGoodDeed': 'роТро░рпБ роиро▒рпНроЪрпЖропро▓рпИроЪрпН роЪрпЖропрпНроп ро╡ро┐ро░рпБроорпНрокрпБроорпН роЗроЩрпНроХрпЗ роХро┐ро│ро┐роХрпН роЪрпЖропрпНропро╡рпБроорпН',
      'submit': 'роЪрооро░рпНрокрпНрокро┐роХрпНроХро╡рпБроорпН',
      'proceed': 'родрпКроЯро░ро╡рпБроорпН',
      'yourscorePerfect100': 'родроЩрпНроХро│рпН роородро┐рокрпНрокрпБ роХроЪрпНроЪро┐родрооро╛рой ЁЯТп',
      'yourscoreWithVal': 'родроЩрпНроХро│рпН роородро┐рокрпНрокрпБ %d',
      'disabled': 'роКройроорпБро▒рпНро▒ро╡ро░рпН',
      'noDisability': 'роЙроЯро▓рпН роКройроорпБро▒рпНро▒ро╡ро░рпН роЕро▓рпНро▓',
      'phyCondidtions': 'роЙроЯро▓рпН роиро┐ро▓рпИроХро│рпН',
      'unmarried': 'родро┐ро░рпБроорогрооро╛роХро╛родро╡ро░рпН',
      'married': 'родро┐ро░рпБроорогрооро╛ройро╡ро░рпН',
      'maritalStatus': 'родро┐ро░рпБроорог роиро┐ро▓рпИ',
      'preferNotToRespond': 'рокродро┐ро▓ро│ро┐роХрпНроХ ро╡рпЗрогрпНроЯро╛роорпН',
      'transgender': 'рооро╛ро▒рпНро▒рпБрокрпНрокро╛ро▓ро┐ройро░рпН',
      'male': 'роЖрогрпН',
      'female': 'рокрпЖрогрпН',
      'nonBinary': 'рокрпИройро░ро┐ роЕро▓рпНро▓ро╛род рокро╛ро▓ро┐ройроорпН',
      'gender': 'рокро╛ро▓ро┐ройроорпН',
      'notSet': 'роХрпЖро╛роЯрпБроХрпНроХрокрпНрокроЯро╡ро┐ро▓рпНро▓рпИ',
      'dateOfBirth': 'рокро┐ро▒роирпНрод роиро╛ро│рпН',
      'yourCountry': 'родроЩрпНроХро│рпН роиро╛роЯрпБ',
      'yourName': 'родроЩрпНроХро│рпН рокрпЖропро░рпН',
      'yourProfile': 'родроЩрпНроХро│рпН роЪрпБропро╡ро┐ро╡ро░роорпН',
      'phyConditionsNotDisabled': 'роЙроЯро▓рпН роиро┐ро▓рпИроХро│рпН: роЙроЯро▓рпН роКройроорпБро▒рпНро▒ро╡ро░рпН роЕро▓рпНро▓',
      'phyConditionsDisabled': 'роЙроЯро▓рпН роиро┐ро▓рпИроХро│рпН: роКройроорпБро▒рпНро▒ро╡ро░рпН',
      'maritalStatusUnmarried': 'родро┐ро░рпБроорог роиро┐ро▓рпИ: родро┐ро░рпБроорогрооро╛роХро╛родро╡ро░рпН',
      'maritalStatusMarried': 'родро┐ро░рпБроорог роиро┐ро▓рпИ: родро┐ро░рпБроорогрооро╛ройро╡ро░рпН',
      'dateOfBirthDisplay': 'рокро┐ро▒роирпНрод роиро╛ро│рпН: %s',
      'genderDisplay': 'рокро╛ро▓ро┐ройроорпН: %s',
      'didNotWrite': 'роОро┤рпБродро╡ро┐ро▓рпНро▓рпИ',
      'close': 'роорпВроЯрпБ',
      'getStarted': 'роЙроЩрпНроХро│рпН родройро┐ропрпБро░ро┐роорпИроХрпНроХрпБ роЙро▒рпБродро┐. роЙроЩрпНроХро│рпН родро░ро╡рпБ роЕро▓рпНро▓родрпБ роЗроирпНрод роЪрпЖропро▓ро┐ропро┐ро▓рпН роирпАроЩрпНроХро│рпН роОро┤рпБродрпБроорпН роОродрпБро╡рпБроорпН роЙроЩрпНроХро│рпН роорпКрокрпИро▓рпБроХрпНроХрпБ ро╡рпЖро│ро┐ропрпЗ рооро╛ро▒рпНро▒рокрпНрокроЯрпБро╡родро┐ро▓рпНро▓рпИ роЕро▓рпНро▓родрпБ ро╡рпЗро▒рпБ ропро╛ро░ро╛ро▓рпБроорпН рокропройрпНрокроЯрпБродрпНродрокрпНрокроЯрпБро╡родро┐ро▓рпНро▓рпИ.\n\nродрпКроЯроЩрпНроХро▓ро╛роорпН.\nроЙроЩрпНроХро│рпН роиро╛роЯрпНроХро│рпН роЗройро┐родро╛роХ роЕроорпИроп ро╡ро╛ро┤рпНродрпНродрпБроХрпНроХро│рпН!',
      'profileWelcome': 'роЙроЩрпНроХро│рпБроХрпНроХро╛роХ рокро┐ро░родрпНропрпЗроХрооро╛роХродрпН родропро╛ро░ро┐роХрпНроХрокрпНрокроЯрпНроЯ родройро┐рокрпНрокроЯрпНроЯ роЕройрпБрокро╡родрпНродрпИрокрпН рокрпЖро▒ роЙроЩрпНроХро│рпН роЪрпБропро╡ро┐ро╡ро░родрпНродрпИрокрпН рокрпБродрпБрокрпНрокро┐роХрпНроХро╡рпБроорпН.',
      'historyWelcome': 'роЙроЩрпНроХро│рпН роХроЯроирпНродроХро╛ро▓ рооройроиро┐ро▓рпИропрпИ роЪро░ро┐рокро╛ро░рпНродрпНродрпБ, роЙроЩрпНроХро│рпН роороХро┐ро┤рпНроЪрпНроЪро┐ропро┐ройрпН роорпБройрпНройрпЗро▒рпНро▒родрпНродрпИ родро┐ройроорпБроорпН рокро╛ро░рпБроЩрпНроХро│рпН. роЙроЩрпНроХро│рпИ роКроХрпНроХрокрпН рокроЯрпБродрпНродро┐роХрпН роХрпКро│рпНро│рпБроЩрпНроХро│рпН.',
      'homeWelcome': 'роорпБроХрокрпНрокрпБрокрпН рокроХрпНроХродрпНродро┐ро▓рпН роТро╡рпНро╡рпКро░рпБ роиро╛ро│рпБроорпН роЙроЩрпНроХро│рпН рооройроиро┐ро▓рпИропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБродрпНродрпБ, роЕроирпНрод роиро╛ро│рпБроХрпНроХрпБ рокрпБродрпНродрпБрогро░рпНроЪрпНроЪро┐ роЕро│ро┐роХрпНроХрпБроорпН рокро╛родрпИропро┐ро▓рпН роЪрпЖро▓рпНро▓рпБроЩрпНроХро│рпН.',
      'welcome': 'GoodnessроХрпНроХрпБ ро╡ро░ро╡рпЗро▒рпНроХро┐ро▒рпЛроорпН!\nроОродро┐ро░рпНрооро▒рпИ роОрогрпНрогроЩрпНроХро│рпИроХрпН роХрпБро▒рпИродрпНродрпБ, роиро▓рпНро▓ роОрогрпНрогроЩрпНроХро│рпИ роКроХрпНроХрпБро╡ро┐родрпНродрпБ роЙроЩрпНроХро│рпН рооройроиро┐ро▓рпИропрпИ роорпЗроорпНрокроЯрпБродрпНродро┐роХрпНроХрпКро│рпНро│ роЙродро╡рпБроЩрпНроХро│рпН.',
      'highMood': 'рооро┐роХро╡рпБроорпН %s',
      'moderateMood': 'рооро┐родрооро╛рой %s',
      'slightMood': 'роЪро┐ро▒ро┐родро│ро╡рпБ %s',
      'privacyAssurance': 'роЙроЩрпНроХро│рпН родройро┐ропрпБро░ро┐роорпИроХрпНроХрпБ роЙро▒рпБродро┐. роЙроЩрпНроХро│рпН родро░ро╡рпБ роЕро▓рпНро▓родрпБ роЗроирпНрод роЪрпЖропро▓ро┐ропро┐ро▓рпН роирпАроЩрпНроХро│рпН роОро┤рпБродрпБроорпН роОродрпБро╡рпБроорпН роЙроЩрпНроХро│рпН роорпКрокрпИро▓рпБроХрпНроХрпБ ро╡рпЖро│ро┐ропрпЗ рооро╛ро▒рпНро▒рокрпНрокроЯрпБро╡родро┐ро▓рпНро▓рпИ роЕро▓рпНро▓родрпБ ро╡рпЗро▒рпБ ропро╛ро░ро╛ро▓рпБроорпН рокропройрпНрокроЯрпБродрпНродрокрпНрокроЯрпБро╡родро┐ро▓рпНро▓рпИ.',
      'quote': 'ро╡ро╛роЪроХроорпН',
      'share': 'рокроХро┐ро░рпН',
      'tryApp': 'роорпБро┤рпБ ро╡ро░ро▓ро╛ро▒рпНро▒рпИродрпН родроХрпНроХро╡рпИродрпНродрпБроХрпН роХрпКро│рпНро│ро╡рпБроорпН роорпЗро▓рпБроорпН роорпЗроорпНрокроЯрпБродрпНродрокрпНрокроЯрпНроЯ роЕроорпНроЪроЩрпНроХро│рпБроХрпНроХрпБроорпН iOS рооро▒рпНро▒рпБроорпН AndroidроХрпНроХро╛рой роОроЩрпНроХро│рпН роЪрпЖропро▓ро┐ропрпИ роорпБропро▒рпНроЪро┐роХрпНроХро╡рпБроорпН. рокродро┐ро╡ро┐ро▒роХрпНроХроорпН роЪрпЖропрпНроп роХрпАро┤рпЗ роЙро│рпНро│ роЗрогрпИрокрпНрокрпБроХро│рпИ роХро┐ро│ро┐роХрпН роЪрпЖропрпНропро╡рпБроорпН.',
      'appDownloadProfileInfo': 'роЪрпБропро╡ро┐ро╡ро░рокрпН рокроХрпНроХродрпНродро┐ро▓рпН роЗродрпИрокрпН рокро┐ройрпНройро░рпБроорпН рокродро┐ро╡ро┐ро▒роХрпНроХроорпН роЪрпЖропрпНропро▓ро╛роорпН.',
      'dailyReminderNotificationTitle': 'роЙроЩрпНроХро│рпН роиро╛ро│рпИ рокродро┐ро╡рпБ роЪрпЖропрпНроп ро╡рпЗрогрпНроЯро┐роп роирпЗро░роорпН!',
      'dailyReminderNotificationBody': 'роТро░рпБ роЪро┐ро▒роирпНрод роОродро┐ро░рпНроХро╛ро▓родрпНродро┐ро▒рпНроХро╛роХ роЙроЩрпНроХро│рпН рооройроиро┐ро▓рпИропрпИ роЗройрпНро▒рпБ рокродро┐ро╡рпБ роЪрпЖропрпНропрпБроЩрпНроХро│рпН.',
      'dailyReminderNotificationPayload': 'роиро▓рпНро▓ роОродро┐ро░рпНроХро╛ро▓родрпНродрпИ роирпЛроХрпНроХро┐ роЪрпЖро▓рпНро╡родро▒рпНроХро╛рой ро╡ро┤ро┐!'
    },
  };

  static List<String> languages ()=> _localizedValues.keys.toList();

  String resource(String name) {
    return _localizedValues[locale.languageCode]![name]!;
  }
}
// #enddocregion Demo

// #docregion Delegate
class L10nDelegate
    extends LocalizationsDelegate<L10n> {
  const L10nDelegate();

  @override
  bool isSupported(Locale locale) => L10n.languages().contains(locale.languageCode);


  @override
  Future<L10n> load(Locale locale) {
    // Returning a SynchronousFuture here because an async "load" operation
    // isn't needed to produce an instance of DemoLocalizations.
    return SynchronousFuture<L10n>(L10n(locale));
  }

  @override
  bool shouldReload(L10nDelegate old) => false;
}